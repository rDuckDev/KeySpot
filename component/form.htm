<template id="FormTemplate">
	<div id="SpotForm" class="modal fade" tabindex="-1" data-backdrop="static" data-keyboard="false">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">Add a spot</h4>
					<button type="button" class="close" data-dismiss="modal">&times;</button>
				</div>
				<div class="modal-body clearfix">
					<div class="form-group">
						<input name="uName" type="text" class="form-control"
							placeholder="Address or business name"
							data-vv-as="Address or business name"
							v-validate.initial="'required'"
							v-model.trim="uName"
							v-bind:class="inputClass(errors.has('uName'))">
						<span v-if="errors.has('uName')" class="invalid-feedback">{{ errors.first("uName") }}</span>
						<small v-else class="form-text text-muted">{{ uLink }}</small>
					</div>
					<div class="form-group">
						<input name="uCode" type="text" class="form-control"
							placeholder="Passcode"
							v-model.trim="uCode">
						<small class="form-text text-muted">Leave Passcode blank if a physical key is used.</small>
					</div>
					<div class="row">
						<div class="form-group col-12 col-md-6">
							<input name="uLatitude" type="text" class="form-control"
								placeholder="Latitude"
								data-vv-as="Latitude"
								v-validate.initial="'required|decimal|not_in:0'"
								v-model.number="uLatitude"
								v-bind:class="inputClass(errors.has('uLatitude'))">
							<span v-show="errors.has('uLatitude')" class="invalid-feedback">{{ errors.first("uLatitude") }}</span>
						</div>
						<div class="form-group col-12 col-md-6">
							<input name="uLongitude" type="text" class="form-control"
								placeholder="Longitude"
								data-vv-as="Longitude"
								v-validate.initial="'required|decimal|not_in:0'"
								v-model.number="uLongitude"
								v-bind:class="inputClass(errors.has('uLongitude'))">
							<span v-show="errors.has('uLongitude')" class="invalid-feedback">{{ errors.first("uLongitude") }}</span>
						</div>
					</div>
					<div class="form-group">
						<button class="btn btn-secondary btn-block" v-on:click="updateLocation">
							<i class="fa fa-circle-o-notch fa-spin" v-if="isFindingLocation"></i>
							<i class="fa fa-map-marker" v-else></i>
							Get latitude and longitude
						</button>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" v-on:click="submit">Add</button>
				</div>
			</div>
		</div>
	</div>
</template>

<script>
	(function () {
		"use strict";

		function updateLocation () {
			if (!"geolocation" in navigator) return;

			var self = this;

			self.isFindingLocation = true;

			navigator.geolocation.getCurrentPosition(function (position) {
				self.uLatitude = position.coords.latitude;
				self.uLongitude = position.coords.longitude;

				self.isFindingLocation = false;
			});
		}
		function inputClass (hasError) {
			return { "is-invalid": hasError };
		}
		function submit () {
			var self = this;

			this.$validator
			.validateAll()
			.then(function (results) {
				// errors were found, so do nothing
				if (!results) return;

				var validator = self.$validator,
					data = {};

				data.uName = self.uName;
				data.uLatitude = self.uLatitude;
				data.uLongitude = self.uLongitude;
				data.uLink = self.uLink;
				data.uCode = self.uCode;

				self.$emit("add", data);

				jQuery("#SpotForm").modal("hide");

				// reset form
				self.uName = "";
				self.uLatitude = "";
				self.uLongitude = "";
				self.uLink = "";
				self.uCode = "";
			});
		}
		Vue.component("spot-form", {
			template: CORE.getTemplateHTML("#FormTemplate"),
			data: function () {
				return {
					uName: "",
					uLatitude: "",
					uLongitude: "",
					uCode: "",
					isFindingLocation: false
				};
			},
			computed: {
				uLink: function () { return "https://maps.google.com?q=" + this.uName; }
			},
			methods: {
				updateLocation: updateLocation,
				inputClass: inputClass,
				submit: submit
			}
		});
	} ());
</script>